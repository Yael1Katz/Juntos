{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/google-map/google-map.component.ts","webpack:///src/app/components/google-map/google-map.component.html","webpack:///src/app/services/geo.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","firebaseConfig","AppModule","initializeApp","forRoot","apiKey","googleMapsKey","declarations","imports","providers","bootstrap","GoogleMapComponent","geo","getUserLocation","hits","subscribe","points","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","getLocations","_","doc","GeoService","db","collection","valueChanges","console","log","key","radius","providedIn","environment","production","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","<app-google-map>\n\n</app-google-map>\n<!-- <div>yael test</div> -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {environment} from '../environments/environment';\nexport const firebaseConfig = environment.firebaseConfig;\nimport {AgmCoreModule} from '@agm/core';\n\n// 1. Import the libs you need\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\n\n\nimport { GeoService } from './services/geo.service';\nimport { GoogleMapComponent } from './components/google-map/google-map.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GoogleMapComponent\n  ],\n  imports: [\n    BrowserModule,\n    AngularFireModule.initializeApp(firebaseConfig),\n    AngularFirestoreModule, // firestore\n    AngularFireAuthModule, // auth\n    AngularFireStorageModule, // storage\n    AgmCoreModule.forRoot({\n      apiKey: environment.googleMapsKey\n    })\n  ],\n  providers: [GeoService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { GeoService } from 'src/app/services/geo.service';\n\n@Component({\n  selector: 'app-google-map',\n  templateUrl: './google-map.component.html',\n  styleUrls: ['./google-map.component.scss']\n})\nexport class GoogleMapComponent implements OnInit {\n  lat: number;\n  lng:number;\n  points: any;\n\n  constructor(private geo: GeoService) {\n\n\n   }\n\n  ngOnInit() {\n    this.getUserLocation();\n    this.geo.hits.subscribe(hits => this.points = hits);\n\n  }\n\n  private getUserLocation(){\n    if(navigator.geolocation){\n      navigator.geolocation.getCurrentPosition(position =>{\n        this.lat = position.coords.latitude;\n        this.lng = position.coords.longitude;\n\n        \n        this.geo.getLocations(500, [this.lat, this.lng]);\n      });\n    }\n  }\n\n  trackByFn(_, doc) {\n    return doc.id;\n  }\n\n  createPoint(lat, lng) {\n    // const collection = this.geo.hits('places')\n\n    // // Use the convenience method\n    // collection.setPoint('my-place', lat, lng)\n\n    // // Or be a little more explicit \n    // const point = this.geo.point(lat, lng)\n    // collection.setDoc('my-place', { position: point.data })\n  }\n}\n","<agm-map [latitude]=\"31.0461\" [longitude]=\"34.8516\" [zoom]=\"8\">\n    <agm-marker *ngFor=\"let point of points\"\n    [latitude]=\"point.lat\"\n    [longitude]=\"point.long\">\n        <agm-info-window>\n            <!-- <h1>This point is {{ point.queryMetadata.distance }} kilometers from the center</h1> -->\n            <!-- <h1>This point is {{ point.contact }} kilometers from the center</h1> -->\n            <h1>Date: {{ point.time }}</h1>\n            <h1>Type: {{point.type}}</h1>\n        </agm-info-window>\n    </agm-marker>\n</agm-map>\n\n\n\n\n\n\n  <!-- <agm-map [latitude]=\"34\" [longitude]=\"-113\" [zoom]=\"8\">\n    <agm-marker *ngFor=\"let point of points | async; trackBy: trackByFn\"\n    <agm-marker *ngFor=\"let point of points | async\"\n    [latitude]=\"point.position.geopoint.latitude\"\n    [longitude]=\"point.position.geopoint.longitude\">\n        <agm-info-window>\n            <h1>This point is {{ point.queryMetadata.distance }} kilometers from the center</h1>\n        </agm-info-window>\n    </agm-marker>\n</agm-map> -->\n\n\n<!-- <div *ngIf=\"lat && lng\">\n    <agm-map [latitude]=\"lat\" [longitude]=\"lng\">\n\n        <agm-marker \n          *ngFor=\"let marker of markers\"\n          [latitude]=\"marker.location[0]\" \n          [longitude]=\"marker.location[1]\"\n          [iconUrl] = \"https://cdn4.iconfinder.com/data/icons/ios-web-user-interface-multi-circle-flat-vol-7/512/Glass_handle_tea_coffee_tea_cup-512.png\">\n    \n            <agm-info-window>\n    \n                <h3><strong>Location Details</strong></h3>\n                    <p>You are {{marker.distance}} kilometers from this point</p>\n    \n            </agm-info-window>\n        </agm-marker>\n    \n    </agm-map>\n</div>\n -->\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\n//import * as geofirex from \"geofirex\";\nimport { Observable, BehaviorSubject } from 'rxjs';\n\n// Init Firebase\n//import * as firebase from 'firebase/app';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeoService {\n  dbRef: any;\n  geoFire: any;\n  //hits = new BehaviorSubject([]);\n\n  hits: any;\n  // firebaseConfig: {apiKey: \"AIzaSyA6y_z7dvkzp3K1DcY-ZscHrFuXGu9gKaI\",\n  // authDomain: \"together-corona.firebaseapp.com\",\n  // databaseURL: \"https://together-corona.firebaseio.com\",\n  // projectId: \"together-corona\",\n  // storageBucket: \"together-corona.appspot.com\",\n  // messagingSenderId: \"354068360803\",\n  // appId: \"1:354068360803:web:4c28d7f7f882ff2b6f9256\"};\n\n\n\n  constructor(private db: AngularFirestore) { \n    //this.things = db.collection('things').valueChanges();\n    //this.things.subscribe(console.log);\n\n    this.hits = db.collection('alerts').valueChanges();\n    this.hits.subscribe(console.log);\n\n    //this.dbRef = this.firestore.collection('alerts');\n    //this.geoFire = geofirex.init(this.dbRef);\n\n\n    //firebase.initializeApp(this.firebaseConfig);\n    //this.geoFire = geofirex.init(firebase);\n  }\n\n  setLocation(key:string, coords: Array<number>){\n    // this.geoFire.set(key, coords)\n    //   .then(()=>{\n    //     return console.log('location updated');\n    //   })\n    //   .catch(err => console.log(err));\n  }\n\n  getLocations(radius: number, coords: Array<number>){\n    // this.geoFire.query({\n    //   center: coords,\n    //   radius:radius\n    // })\n    // .on('key entered', (key, location, distance)=>{\n    //   let hit = {\n    //     location: location,\n    //     distance: distance\n    //   }\n    //   let currentHits = this.hits.value\n    //   currentHits.push(hit)\n    //   this.hits.next(currentHits)\n    // });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {apiKey: \"AIzaSyA6y_z7dvkzp3K1DcY-ZscHrFuXGu9gKaI\",\n  authDomain: \"together-corona.firebaseapp.com\",\n  databaseURL: \"https://together-corona.firebaseio.com\",\n  projectId: \"together-corona\",\n  storageBucket: \"together-corona.appspot.com\",\n  messagingSenderId: \"354068360803\",\n  appId: \"1:354068360803:web:4c28d7f7f882ff2b6f9256\"},\n  //googleMapsKey: 'AIzaSyDdZD0Rsf1mCKYSh1Xu9I1d3uNIZM2hNEo'\n  googleMapsKey: 'AIzaSyDC2_ed_CHyauhbeGlDbZghelMnJJNh5IM'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}